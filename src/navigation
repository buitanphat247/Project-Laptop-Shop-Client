import React from 'react';
import { Routes, Route, Navigate } from 'react-router-dom';
import MainLayout from '../layouts/MainLayout';
import Home from '../pages/Home';
import Product from '../pages/Product';
import About from '../pages/About';
import Detail from '../pages/Detail';
import Cart from '../pages/Cart';
import Setting from '../pages/Setting';
import Auth from '../pages/Auth';
import AdminLayout from '../layouts/AdminLayout';
import Dashboard from '../pages/Dashboard';
import ProductManager from '../pages/ProductManager';
import OrderManager from '../pages/OrderManager';
import UserManager from '../pages/UserManager';
import NewsManager from '../pages/NewsManager';
import RequireAuth from './RequireAuth';
import RequireAdminAuth from './RequireAdminAuth';

// Hàm lấy accessToken từ cookie
function getCookie(name) {
  const value = `; ${document.cookie}`;
  const parts = value.split(`; ${name}=`);
  if (parts.length === 2) return parts.pop().split(';').shift();
  return '';
}

function AppRoutes() {
  const isLoggedIn = !!getCookie('accessToken');

  return (
    <Routes>
      <Route path="/" element={<MainLayout />} >
        <Route path='/' element={<Home />} />
        <Route path='/products' element={<Product />} />
        <Route path='/about' element={<About />} />
        <Route path="/product/:id" element={<Detail />} />
        <Route path="/cart" element={
          <RequireAuth>
            <Cart />
          </RequireAuth>
        } />
        <Route path="/setting" element={
          <RequireAuth>
            <Setting />
          </RequireAuth>
        } />
      </Route>
      <Route
        path="/auth"
        element={
          isLoggedIn ? <Navigate to="/" replace /> : <Auth />
        }
      />
      <Route path="/admin" element={
        <RequireAdminAuth>
          <AdminLayout />
        </RequireAdminAuth>
      }>
        <Route index element={<Dashboard />} />
        <Route path="products" element={<ProductManager />} />
        <Route path="orders" element={<OrderManager />} />
        <Route path="users" element={<UserManager />} />
        <Route path="news" element={<NewsManager />} />
      </Route>
    </Routes>
  );
}

export default AppRoutes;